{"ast":null,"code":"import React from'react';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function TodoList(props){var todos=props.todos,setTodos=props.setTodos;var deleteTodo=function deleteTodo(id){var updateDelete=todos.filter(function(todos){return todos.id!==id;});setTodos(updateDelete);};var Completed=function Completed(id){var completeTodo=todos.map(function(todo){if(todo.id===id){todo.isCompleted=true;return todo;}return todo;});setTodos(completeTodo);};var completeCount=function completeCount(){return todos.filter(function(todocount){return todocount.isCompleted;}).length;};return/*#__PURE__*/_jsx(\"div\",{class:\"d-flex justify-content-center\",children:/*#__PURE__*/_jsxs(\"div\",{class:\"list-group col-md-5 d-flex justify-content-center\",children:[/*#__PURE__*/_jsxs(\"button\",{type:\"button\",class:\"list-group-item list-group-item-action active\",\"aria-current\":\"true\",children:[\"TASK LIST (\",completeCount(),\" / \",todos.length,\")\"]}),todos.map(function(tasklist){return/*#__PURE__*/_jsxs(\"button\",{type:\"button\",class:\"list-group-item list-group-item-action d-flex justify-content-between\",children:[tasklist.isCompleted?/*#__PURE__*/_jsx(\"span\",{onClick:function onClick(){return Completed(tasklist.id);},style:{textDecoration:\"line-through\",color:\"red\"},children:tasklist.task}):/*#__PURE__*/_jsx(\"span\",{onClick:function onClick(){return Completed(tasklist.id);},children:tasklist.task}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"i\",{class:\"fas fa-trash\",onClick:function onClick(){return deleteTodo(tasklist.id);},style:{marginRight:\"10px\"}})})]});})]})});}export default TodoList;","map":{"version":3,"sources":["/home/cogent/Desktop/React_crash/react-todo/react-todos/src/components/TodoList.js"],"names":["React","TodoList","props","todos","setTodos","deleteTodo","id","updateDelete","filter","Completed","completeTodo","map","todo","isCompleted","completeCount","todocount","length","tasklist","textDecoration","color","task","marginRight"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,wFAEA,QAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAyB,IACdC,CAAAA,KADc,CACKD,KADL,CACdC,KADc,CACPC,QADO,CACKF,KADL,CACPE,QADO,CAErB,GAAMC,CAAAA,UAAU,CAAE,QAAZA,CAAAA,UAAY,CAACC,EAAD,CAAM,CACpB,GAAMC,CAAAA,YAAY,CAAGJ,KAAK,CAACK,MAAN,CAAa,SAAAL,KAAK,QAAIA,CAAAA,KAAK,CAACG,EAAN,GAAaA,EAAjB,EAAlB,CAArB,CACAF,QAAQ,CAACG,YAAD,CAAR,CACH,CAHD,CAKA,GAAME,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACH,EAAD,CAAM,CACpB,GAAMI,CAAAA,YAAY,CAAGP,KAAK,CAACQ,GAAN,CAAU,SAAAC,IAAI,CAAE,CACjC,GAAIA,IAAI,CAACN,EAAL,GAAYA,EAAhB,CAAmB,CACfM,IAAI,CAACC,WAAL,CAAmB,IAAnB,CACA,MAAOD,CAAAA,IAAP,CACH,CACG,MAAOA,CAAAA,IAAP,CACP,CANoB,CAArB,CAOAR,QAAQ,CAACM,YAAD,CAAR,CACH,CATD,CAWA,GAAMI,CAAAA,aAAa,CAAE,QAAfA,CAAAA,aAAe,EAAI,CACrB,MAAOX,CAAAA,KAAK,CAACK,MAAN,CAAa,SAAAO,SAAS,QAAEA,CAAAA,SAAS,CAACF,WAAZ,EAAtB,EAA+CG,MAAtD,CAEH,CAHD,CAKA,mBACI,YAAK,KAAK,CAAC,+BAAX,uBACI,aAAK,KAAK,CAAC,mDAAX,wBACI,gBACI,IAAI,CAAC,QADT,CAEI,KAAK,CAAC,+CAFV,CAGI,eAAa,MAHjB,yBAKgBF,aAAa,EAL7B,OAKoCX,KAAK,CAACa,MAL1C,OADJ,CASIb,KAAK,CAACQ,GAAN,CAAU,SAAAM,QAAQ,CAAI,CAClB,mBACI,gBAAQ,IAAI,CAAC,QAAb,CAAsB,KAAK,CAAC,uEAA5B,WACKA,QAAQ,CAACJ,WAAT,cAAuB,aAAM,OAAO,CAAE,yBAAMJ,CAAAA,SAAS,CAACQ,QAAQ,CAACX,EAAV,CAAf,EAAf,CAA6C,KAAK,CAAE,CAAEY,cAAc,CAAE,cAAlB,CAAkCC,KAAK,CAAE,KAAzC,CAApD,UACnBF,QAAQ,CAACG,IADU,EAAvB,cAES,aAAM,OAAO,CAAE,yBAAMX,CAAAA,SAAS,CAACQ,QAAQ,CAACX,EAAV,CAAf,EAAf,UACLW,QAAQ,CAACG,IADJ,EAHd,cAMI,kCACA,UAAG,KAAK,CAAC,cAAT,CAAwB,OAAO,CAAE,yBAAMf,CAAAA,UAAU,CAACY,QAAQ,CAACX,EAAV,CAAhB,EAAjC,CAAgE,KAAK,CAAE,CAACe,WAAW,CAAC,MAAb,CAAvE,EADA,EANJ,GADJ,CAaH,CAdD,CATJ,GADJ,EADJ,CA8BH,CAED,cAAepB,CAAAA,QAAf","sourcesContent":["import React from 'react'\n\nfunction TodoList(props) {\n    const {todos, setTodos} = props\n    const deleteTodo= (id)=>{\n        const updateDelete = todos.filter(todos => todos.id !== id )\n        setTodos(updateDelete)\n    }\n\n    const Completed = (id)=>{\n        const completeTodo = todos.map(todo=>{\n            if (todo.id === id){\n                todo.isCompleted = true;\n                return todo;\n            }\n                return todo;\n        })\n        setTodos(completeTodo)\n    }\n\n    const completeCount =()=>{\n        return todos.filter(todocount=>todocount.isCompleted).length\n       \n    }\n\n    return (\n        <div class=\"d-flex justify-content-center\">\n            <div class=\"list-group col-md-5 d-flex justify-content-center\">\n                <button\n                    type=\"button\"\n                    class=\"list-group-item list-group-item-action active\"\n                    aria-current=\"true\"\n                >\n                    TASK LIST ({completeCount()} / {todos.length}) \n                </button>\n                {\n                todos.map(tasklist => {\n                    return (\n                        <button type=\"button\" class=\"list-group-item list-group-item-action d-flex justify-content-between\">\n                            {tasklist.isCompleted ? <span onClick={() => Completed(tasklist.id)} style={{ textDecoration: \"line-through\", color: \"red\" }}>\n                                {tasklist.task}\n                            </span> : <span onClick={() => Completed(tasklist.id)}>\n                                {tasklist.task}\n                            </span>}\n                            <div>\n                            <i class=\"fas fa-trash\" onClick={() => deleteTodo(tasklist.id)} style={{marginRight:\"10px\"}}></i>\n                           \n                            </div>\n                        </button>\n                    )\n                })\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default TodoList"]},"metadata":{},"sourceType":"module"}