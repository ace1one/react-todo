{"version":3,"sources":["components/TodoForm.js","components/TodoList.js","components/TodoApp.js","App.js","reportWebVitals.js","index.js"],"names":["TodoForm","setInput","input","todos","setTodos","class","onSubmit","e","preventDefault","addTodo","id","Math","floor","random","task","isCompleted","handleSubmit","label","variant","type","value","name","onChange","target","console","log","placeholder","className","TodoList","props","Completed","completeTodo","map","todo","aria-current","filter","todocount","length","tasklist","onClick","style","textDecoration","color","updateDelete","deleteTodo","marginRight","TodoApp","useState","App","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a41a0b8c.chunk.js","sourcesContent":["import React from 'react';\n\n\nexport default function TodoForm({setInput,input,todos,setTodos}) {\n\n    const handleChange= e=> {\n       setInput(e.target.value)\n       console.log(e.target.value)\n\n    }\n\n    const handleSubmit = e =>{\n        //to prevent from refresin page on click button\n        e.preventDefault();\n        const addTodo ={\n          id: Math.floor(Math.random()* 1000),\n          task: input,\n          isCompleted: false\n        }\n\n        setTodos([...todos,addTodo])\n        setInput('');\n\n\n    }\n    return (\n        <div class=\"d-flex justify-content-center\" >\n            <form  onSubmit={(e) =>handleSubmit(e)} >\n              <div class=\"row\">\n                <div class=\"col-md-10\">\n                  <div class=\"md-form mt-0\">\n                    <input \n                    id=\"outlined-basic\" label=\"Outlined\" variant=\"outlined\"\n                    type='text'\n                    value={input}\n                    name='text'\n                    onChange={handleChange} \n                    class=\"form-control\" \n                    placeholder=\"Add Task\" />\n                  </div>\n                </div>\n                  <div class=\"col-md-2\">\n                    <button type=\"submit\" className=\"btn btn-primary btn-md\">Add</button>\n                  </div>\n              </div>\n             \n            </form>\n        </div>\n    )\n}\n","import React from 'react'\n\nfunction TodoList(props) {\n    const {todos, setTodos} = props\n    const deleteTodo= (id)=>{\n        const updateDelete = todos.filter(todos => todos.id !== id )\n        setTodos(updateDelete)\n    }\n\n    const Completed = (id)=>{\n        const completeTodo = todos.map(todo=>{\n            if (todo.id === id){\n                todo.isCompleted = true;\n                return todo;\n            }\n                return todo;\n        })\n        setTodos(completeTodo)\n    }\n\n    const completeCount =()=>{\n        return todos.filter(todocount=>todocount.isCompleted).length\n       \n    }\n\n    return (\n        <div class=\"d-flex justify-content-center\">\n            <div class=\"list-group col-md-5 d-flex justify-content-center\">\n                <button\n                    type=\"button\"\n                    class=\"list-group-item list-group-item-action active\"\n                    aria-current=\"true\"\n                >\n                    TASK LIST ({completeCount()} / {todos.length}) \n                </button>\n                {\n                todos.map(tasklist => {\n                    return (\n                        <button type=\"button\" class=\"list-group-item list-group-item-action d-flex justify-content-between\">\n                            {tasklist.isCompleted ? <span onClick={() => Completed(tasklist.id)} style={{ textDecoration: \"line-through\", color: \"red\" }}>\n                                {tasklist.task}\n                            </span> : <span onClick={() => Completed(tasklist.id)}>\n                                {tasklist.task}\n                            </span>}\n                            <div>\n                            <i class=\"fas fa-trash\" onClick={() => deleteTodo(tasklist.id)} style={{marginRight:\"10px\"}}></i>\n                           \n                            </div>\n                        </button>\n                    )\n                })\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default TodoList","import React, {useState} from 'react'\nimport TodoForm from './TodoForm'\nimport TodoList from './TodoList';\n\n\n\nfunction TodoApp() {\n    const [input, setInput] = useState(\"\")\n    const [todos,setTodos] = useState([\n        {\n            id:1,\n            task:\"First Task\",\n            isCompleted: false\n        },\n        {\n            id:2,\n            task:\"Second Task\",\n            isCompleted: false\n        }\n    ]);\n    \n \n\n    return (\n        <div className=\"todoApp\">\n            <h1>Task List</h1>\n            <TodoForm\n            setInput={setInput} \n            input={input} \n            todos={todos}\n            setTodos={setTodos}\n             />\n            <TodoList todos={todos} setTodos={setTodos}  />\n        </div>\n    )\n}\n\nexport default TodoApp\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport TodoApp from './components/TodoApp';\n\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{textAlign:\"center\" }}>\n      <TodoApp/>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport '@fortawesome/fontawesome-free/css/all.min.css'; \nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}